# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  rules:
  #Error rules
     - always_use_package_imports
     - avoid_empty_else
     - avoid_print
     - avoid_relative_lib_imports
     - avoid_type_to_string
     - avoid_types_as_parameter_names
     - cancel_subscriptions
     - close_sinks
     - collection_methods_unrelated_type
     - control_flow_in_finally
     - empty_statements
     - hash_and_equals
     - literal_only_boolean_expressions
     - no_adjacent_strings_in_list
     - no_self_assignments
     - no_wildcard_variable_uses
     - prefer_void_to_null
     - test_types_in_equals
     - throw_in_finally
     - unnecessary_statements
     - unrelated_type_equality_checks
     - use_build_context_synchronously
     - valid_regexps
  #Style rules
     - always_declare_return_types
     - always_put_control_body_on_new_line
     - always_put_required_named_parameters_first
     - always_require_non_null_named_parameters
     - annotate_overrides
     - avoid_bool_literals_in_conditional_expressions
     - avoid_classes_with_only_static_members
     - avoid_equals_and_hash_code_on_mutable_classes
     - avoid_escaping_inner_quotes
     - avoid_field_initializers_in_const_classes
     - avoid_final_parameters
     - avoid_implementing_value_types
     - avoid_init_to_null
     - avoid_js_rounded_ints
     - avoid_null_checks_in_equality_operators
     - avoid_positional_boolean_parameters
     - avoid_renaming_method_parameters
     - avoid_return_types_on_setters
     - avoid_returning_null_for_void
     - avoid_returning_this
     - avoid_setters_without_getters
     - avoid_shadowing_type_parameters
     - avoid_single_cascade_in_expression_statements
     - avoid_types_on_closure_parameters
     - avoid_unnecessary_containers
     - avoid_unused_constructor_parameters
     - avoid_void_async
     - await_only_futures
     - camel_case_extensions
     - camel_case_types
     - combinators_ordering
     - constant_identifier_names
     - curly_braces_in_flow_control_structures
     - directives_ordering
     - empty_catches
     - empty_constructor_bodies
     - exhaustive_cases
     - file_names
     - library_names
     - library_prefixes
     - matching_super_parameters
     - no_leading_underscores_for_library_prefixes
     - no_leading_underscores_for_local_identifiers
     - non_constant_identifier_names
     - noop_primitive_operations
     - null_check_on_nullable_type_parameter
     - null_closures
     - omit_local_variable_types
     - overridden_fields
     - package_prefixed_library_names
     - prefer_adjacent_string_concatenation
     - prefer_asserts_with_message
     - prefer_const_constructors_in_immutables
     - prefer_const_declarations
     - prefer_const_literals_to_create_immutables
     - prefer_contains
     - prefer_final_locals
     - prefer_generic_function_type_aliases
     - prefer_if_elements_to_conditional_expressions
     - prefer_initializing_formals
     - prefer_inlined_adds
     - prefer_int_literals
     - prefer_interpolation_to_compose_strings
     - prefer_is_empty
     - prefer_is_not_empty
     - prefer_is_not_operator
     - prefer_null_aware_operators
     - prefer_typing_uninitialized_variables
     - recursive_getters
     - sized_box_for_whitespace
     - sort_child_properties_last
     - sort_constructors_first
     - unnecessary_getters_setters
     - unnecessary_new
     - unnecessary_null_aware_assignments
     - unnecessary_null_in_if_null_operators
     - unnecessary_nullable_for_final_variable_declarations
     - unnecessary_overrides
     - unnecessary_string_escapes
     - unnecessary_string_interpolations
     - unnecessary_this
     - unnecessary_to_list_in_spreads
     - use_enums
     - use_function_type_syntax_for_parameters
     - use_setters_to_change_properties
  #Pub rules
     - package_names

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
